# Generated by Django 5.2.4 on 2025-08-09 01:09

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True)),
                ('nit', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo_empresa', models.ImageField(blank=True, null=True, upload_to='empresas_logos/')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('formato_version_empresa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Versión del Formato (Empresa)')),
                ('formato_fecha_version_empresa', models.DateField(blank=True, null=True, verbose_name='Fecha de Versión del Formato (Empresa)')),
                ('formato_codificacion_empresa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Codificación del Formato (Empresa)')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['nombre'],
                'permissions': [('can_view_empresas', 'Can view empresas'), ('can_add_empresas', 'Can add empresas'), ('can_change_empresas', 'Can change empresas'), ('can_delete_empresas', 'Can delete empresas')],
            },
        ),
        migrations.CreateModel(
            name='Procedimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_emision', models.DateField(blank=True, null=True)),
                ('documento_pdf', models.FileField(blank=True, null=True, upload_to='procedimientos/')),
            ],
            options={
                'verbose_name': 'Procedimiento',
                'verbose_name_plural': 'Procedimientos',
                'ordering': ['nombre'],
                'permissions': [('can_view_procedimiento', 'Can view procedimiento'), ('can_add_procedimiento', 'Can add procedimiento'), ('can_change_procedimiento', 'Can change procedimiento'), ('can_delete_procedimiento', 'Can delete procedimiento')],
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Ubicación',
                'verbose_name_plural': 'Ubicaciones',
                'ordering': ['nombre'],
                'permissions': [('can_view_ubicacion', 'Can view ubicacion'), ('can_add_ubicacion', 'Can add ubicacion'), ('can_change_ubicacion', 'Can change ubicacion'), ('can_delete_ubicacion', 'Can delete ubicacion')],
            },
        ),
        migrations.CreateModel(
            name='Unidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('simbolo', models.CharField(blank=True, max_length=10, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Unidad de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_user_permissions', to='auth.permission', verbose_name='user permissions')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_empresa', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'permissions': [('can_view_customuser', 'Can view custom user'), ('can_add_customuser', 'Can add custom user'), ('can_change_customuser', 'Can change custom user'), ('can_delete_customuser', 'Can delete custom user')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_interno', models.CharField(max_length=100, unique=True, verbose_name='Código Interno')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Equipo')),
                ('tipo_equipo', models.CharField(choices=[('Equipo de Medición', 'Equipo de Medición'), ('Equipo de Referencia', 'Equipo de Referencia'), ('Equipo Auxiliar', 'Equipo Auxiliar'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipo de Equipo')),
                ('marca', models.CharField(blank=True, max_length=100, null=True, verbose_name='Marca')),
                ('modelo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modelo')),
                ('numero_serie', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Número de Serie')),
                ('ubicacion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ubicación')),
                ('responsable', models.CharField(blank=True, max_length=100, null=True, verbose_name='Responsable')),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('De Baja', 'De Baja'), ('En Mantenimiento', 'En Mantenimiento'), ('En Calibración', 'En Calibración'), ('En Comprobación', 'En Comprobación')], default='Activo', max_length=50, verbose_name='Estado')),
                ('fecha_adquisicion', models.DateField(blank=True, null=True, verbose_name='Fecha de Adquisición')),
                ('rango_medida', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rango de Medida')),
                ('resolucion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Resolución')),
                ('error_maximo_permisible', models.CharField(blank=True, max_length=100, null=True, verbose_name='Error Máximo Permisible')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('archivo_compra_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Archivo de Compra (PDF)')),
                ('ficha_tecnica_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Ficha Técnica (PDF)')),
                ('manual_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Manual (PDF)')),
                ('otros_documentos_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Otros Documentos (PDF)')),
                ('imagen_equipo', models.ImageField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Imagen del Equipo')),
                ('version_formato', models.CharField(blank=True, max_length=50, null=True, verbose_name='Versión del Formato')),
                ('fecha_version_formato', models.DateField(blank=True, null=True, verbose_name='Fecha de Versión del Formato')),
                ('codificacion_formato', models.CharField(blank=True, max_length=50, null=True, verbose_name='Codificación del Formato')),
                ('fecha_ultima_calibracion', models.DateField(blank=True, null=True, verbose_name='Fecha Última Calibración')),
                ('proxima_calibracion', models.DateField(blank=True, null=True, verbose_name='Próxima Calibración')),
                ('frecuencia_calibracion_meses', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Frecuencia Calibración (meses)')),
                ('fecha_ultimo_mantenimiento', models.DateField(blank=True, null=True, verbose_name='Fecha Último Mantenimiento')),
                ('proximo_mantenimiento', models.DateField(blank=True, null=True, verbose_name='Próximo Mantenimiento')),
                ('frecuencia_mantenimiento_meses', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Frecuencia Mantenimiento (meses)')),
                ('fecha_ultima_comprobacion', models.DateField(blank=True, null=True, verbose_name='Fecha Última Comprobación')),
                ('proxima_comprobacion', models.DateField(blank=True, null=True, verbose_name='Próxima Comprobación')),
                ('frecuencia_comprobacion_meses', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Frecuencia Comprobación (meses)')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipos', to='core.empresa', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
                'ordering': ['codigo_interno'],
                'permissions': [('can_view_equipo', 'Can view equipo'), ('can_add_equipo', 'Can add equipo'), ('can_change_equipo', 'Can change equipo'), ('can_delete_equipo', 'Can delete equipo'), ('can_export_reports', 'Can export reports (PDF, Excel, ZIP)')],
            },
        ),
        migrations.CreateModel(
            name='Comprobacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_comprobacion', models.DateField(verbose_name='Fecha de Comprobación')),
                ('nombre_proveedor', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del Proveedor de Comprobación')),
                ('responsable', models.CharField(blank=True, max_length=100, null=True, verbose_name='Responsable de la Comprobación')),
                ('resultado', models.CharField(choices=[('Aprobado', 'Aprobado'), ('Rechazado', 'Rechazado')], max_length=10, verbose_name='Resultado')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('documento_comprobacion', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Documento de Comprobación (PDF)')),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprobaciones', to='core.equipo', verbose_name='Equipo')),
            ],
            options={
                'verbose_name': 'Comprobación',
                'verbose_name_plural': 'Comprobaciones',
                'ordering': ['-fecha_comprobacion'],
                'permissions': [('can_view_comprobacion', 'Can view comprobacion'), ('can_add_comprobacion', 'Can add comprobacion'), ('can_change_comprobacion', 'Can change comprobacion'), ('can_delete_comprobacion', 'Can delete comprobacion')],
            },
        ),
        migrations.CreateModel(
            name='Calibracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_calibracion', models.DateField(verbose_name='Fecha de Calibración')),
                ('nombre_proveedor', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del Proveedor de Calibración')),
                ('resultado', models.CharField(choices=[('Cumple', 'Cumple'), ('No Cumple', 'No Cumple')], default='Cumple', max_length=10, verbose_name='Resultado')),
                ('numero_certificado', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de Certificado')),
                ('documento_calibracion', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Certificado de Calibración (PDF)')),
                ('confirmacion_metrologica_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Confirmación Metrológica (PDF)')),
                ('intervalos_calibracion_pdf', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Intervalos de Calibración (PDF)')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibraciones', to='core.equipo', verbose_name='Equipo')),
            ],
            options={
                'verbose_name': 'Calibración',
                'verbose_name_plural': 'Calibraciones',
                'ordering': ['-fecha_calibracion'],
                'permissions': [('can_view_calibracion', 'Can view calibracion'), ('can_add_calibracion', 'Can add calibracion'), ('can_change_calibracion', 'Can change calibracion'), ('can_delete_calibracion', 'Can delete calibracion')],
            },
        ),
        migrations.CreateModel(
            name='BajaEquipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_baja', models.TextField(verbose_name='Razón de Baja')),
                ('fecha_baja', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Baja')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones Adicionales')),
                ('documento_baja', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Documento de Baja (PDF)')),
                ('dado_de_baja_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Dado de Baja Por')),
                ('equipo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='baja_registro', to='core.equipo', verbose_name='Equipo')),
            ],
            options={
                'verbose_name': 'Baja de Equipo',
                'verbose_name_plural': 'Bajas de Equipo',
                'ordering': ['-fecha_baja'],
                'permissions': [('can_view_bajaequipo', 'Can view baja equipo'), ('can_add_bajaequipo', 'Can add baja equipo'), ('can_change_bajaequipo', 'Can change baja equipo'), ('can_delete_bajaequipo', 'Can delete baja equipo')],
            },
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_mantenimiento', models.DateField(verbose_name='Fecha de Mantenimiento')),
                ('nombre_proveedor', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del Proveedor de Mantenimiento')),
                ('responsable', models.CharField(blank=True, max_length=100, null=True, verbose_name='Responsable del Mantenimiento')),
                ('tipo_mantenimiento', models.CharField(choices=[('Preventivo', 'Preventivo'), ('Correctivo', 'Correctivo'), ('Predictivo', 'Predictivo'), ('Inspección', 'Inspección')], max_length=50, verbose_name='Tipo de Mantenimiento')),
                ('costo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción del Trabajo')),
                ('documento_mantenimiento', models.FileField(blank=True, null=True, upload_to=core.models.get_upload_path, verbose_name='Documento de Mantenimiento (PDF)')),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mantenimientos', to='core.equipo', verbose_name='Equipo')),
            ],
            options={
                'verbose_name': 'Mantenimiento',
                'verbose_name_plural': 'Mantenimientos',
                'ordering': ['-fecha_mantenimiento'],
                'permissions': [('can_view_mantenimiento', 'Can view mantenimiento'), ('can_add_mantenimiento', 'Can add mantenimiento'), ('can_change_mantenimiento', 'Can change mantenimiento'), ('can_delete_mantenimiento', 'Can delete mantenimiento')],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_servicio', models.CharField(choices=[('Calibración', 'Calibración'), ('Mantenimiento', 'Mantenimiento'), ('Comprobación', 'Comprobación'), ('Compra', 'Compra'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipo de Servicio')),
                ('nombre_contacto', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre de Contacto')),
                ('numero_contacto', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número de Contacto')),
                ('nombre_empresa', models.CharField(max_length=200, verbose_name='Nombre de la Empresa')),
                ('correo_electronico', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('pagina_web', models.URLField(blank=True, null=True, verbose_name='Página Web')),
                ('alcance', models.TextField(blank=True, null=True, verbose_name='Alcance (áreas o magnitudes)')),
                ('servicio_prestado', models.TextField(blank=True, null=True, verbose_name='Servicio Prestado')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proveedores', to='core.empresa', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre_empresa'],
                'permissions': [('can_view_proveedor', 'Can view proveedor'), ('can_add_proveedor', 'Can add proveedor'), ('can_change_proveedor', 'Can change proveedor'), ('can_delete_proveedor', 'Can delete proveedor')],
                'unique_together': {('nombre_empresa', 'empresa')},
            },
        ),
    ]
